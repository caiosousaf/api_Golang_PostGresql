// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Caio Sousa",
            "url": "http://www.swagger.io/support",
            "email": "caiosousafernandesferreira@hotmail.com"
        },
        "license": {
            "name": "Mozilla Public License 2.0",
            "url": "https://www.mozilla.org/en-US/MPL/2.0/"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/equipes": {
            "get": {
                "description": "Returns all registered teams, all their members and all projects they are assigned to",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teams"
                ],
                "summary": "Get All Teams",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/equipes.GetMembers"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "POST a new Team. For the request to be met, the \"nome_equipe\" are required.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teams"
                ],
                "summary": "POST a new Team",
                "parameters": [
                    {
                        "description": "NewTeam",
                        "name": "Team",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/equipes.AddEquipeRequestBody"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/equipes/{id}": {
            "get": {
                "description": "Returns a team, all their members and all projects they are assigned to",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teams"
                ],
                "summary": "Get Specific Team",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id_Team",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/equipes.GetMembers"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "DELETE a Team",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teams"
                ],
                "summary": "DELETE a Team",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Team_ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Equipe"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/equipes/{id}/pessoas": {
            "get": {
                "description": "GET all members of a specific Team with ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teams"
                ],
                "summary": "Get Members of a specific Team",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Team ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/equipes.Membros"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/equipes/{id}/projetos": {
            "get": {
                "description": "GET all projects of a specific Team with ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teams"
                ],
                "summary": "Get Projects of a specific Team",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Team ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/equipes.EquipeProjetos"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/pessoas": {
            "get": {
                "description": "Returns all registered people and the name of the team they are assigned to",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "Get All People",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pessoas.GetPessoa"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "POST a new Person. For the request to be met, the \"nome_pessoa\", \"funcao_pessoa\", \"equipe_id\" are required.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "POST a new Person",
                "parameters": [
                    {
                        "description": "New Person",
                        "name": "Person",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pessoas.AddPessoaRequestBody"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/pessoas/{id}": {
            "get": {
                "description": "GET a specific person",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "GET a specific Person",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Pessoa_ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pessoas.GetPessoa"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "PUT a specific person. For the request to be met, the \"nome_pessoa\" and \"funcao_pessoa\" and \"equipe_id\" are required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "PUT Person with ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Pessoa ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Pessoa",
                        "name": "Pessoa",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/pessoas.UpdatePessoaRequestBody"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "DELETE a person",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "DELETE a Person",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Pessoa_ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Pessoa"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/pessoas/{id}/tasks": {
            "get": {
                "description": "GET the tasks registered and assigned to a specific person",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "People"
                ],
                "summary": "GET All Tasks of a specific Person",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Pessoa_ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pessoas.result"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/projetos": {
            "get": {
                "description": "Get list all project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Get All Projects",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/projetos.Projects"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "POST a new project. For the request to be met, the \"nome_projeto\", \"equipe_id\", \"descricao_projeto\" are required. The status already goes with a predefined value \"Em Andamento\". the \"prazo_entrega\" is the number of days that the delivery time will be",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "POST a new Project",
                "parameters": [
                    {
                        "description": "NewProject",
                        "name": "NewProject",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/projetos.AddProjetoRequestBody"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/projetos/status/{status}": {
            "get": {
                "description": "GET all registered projects that have the status passed as a parameter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Get Status of Projects with a specific status with Param Status",
                "parameters": [
                    {
                        "enum": [
                            "Em Andamento",
                            "Concluido"
                        ],
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Projeto"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/projetos/{id}": {
            "get": {
                "description": "GET a project with a specific ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Get Project with specific ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Projeto ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/projetos.Projects"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "PUT a specific project. For the request to be met, the \"nome_projeto\" and \"equipe_id\" and \"descricao_projeto\" are required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "PUT Project with ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Projeto ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Project",
                        "name": "Project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/projetos.UpdateProjetoRequestBody"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "DELETE a specific project. For the request to be met, the \"id_projeto\" are required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Delete a specific Project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Projeto ID",
                        "name": "ID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Projeto"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/projetos/{id}/status": {
            "put": {
                "description": "PUT Status of a specific project. For the request to be met, the \"status\" are required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "PUT Status of a Project",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Status-Project",
                        "name": "Status-Project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/projetos.UpdateStatusProject"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/projetos/{id}/tasks": {
            "get": {
                "description": "GET all tasks of a project with ID_Projeto specific",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Projects"
                ],
                "summary": "Get Tasks of Project with Param ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Projeto ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/projetos.TasksProjeto"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "description": "Get list all task",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Get All Tasks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/tasks.Task"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "POST a new task. For the request to be met, the \"descricao_task\", \"pessoa_id\", \"projeto_id\", \"prazo_entrega(in days)\", \"prioridade\" are required. The status already goes with a predefined value \"Em Andamento\". the \"prazo_entrega\" is the number of days that the delivery time will be",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "POST a new Task",
                "parameters": [
                    {
                        "description": "NewTask",
                        "name": "NewTask",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tasks.AddTaskRequestBody"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tasks/list": {
            "get": {
                "description": "Get list of status of all tasks registered",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Get a list of status of All Tasks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/tasks.GetStatusList"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tasks/status/{status}": {
            "get": {
                "description": "GET All tasks with a specific status. \"Em Andamento\" or \"Concluido\"",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "GET status of tasks",
                "parameters": [
                    {
                        "enum": [
                            "Em Andamento",
                            "Concluido"
                        ],
                        "type": "string",
                        "description": "Status",
                        "name": "status",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/tasks.Task"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tasks/{id}": {
            "get": {
                "description": "Get a specific task with id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "Get a specific Task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/tasks.Task"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "put": {
                "description": "PUT a specific task. For the request to be met, the \"descricao_task\" and \"pessoa_id\" and \"projeto_id\" and \"prioridade\" are required.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "PUT Task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "PUT Task",
                        "name": "Task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tasks.UpdateTaskRequestBody"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "DELETE a Task with id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "DELETE a Task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task_ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Task"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tasks/{id}/status": {
            "put": {
                "description": "PUT Status of a specific Task. For the request to be met, the \"status\" are required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Tasks"
                ],
                "summary": "PUT Status of a Task",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Status",
                        "name": "Status",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/tasks.UpdateStatusTaskRequestBody"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/teams/{id}": {
            "put": {
                "description": "PUT a specific Team. For the request to be met, the \"id_equipe\" and \"nome_equipe\" are required",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Teams"
                ],
                "summary": "PUT Team with ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Team ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Team",
                        "name": "Team",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/equipes.UpdateEquipeRequestBody"
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "equipes.AddEquipeRequestBody": {
            "type": "object",
            "properties": {
                "nome_equipe": {
                    "type": "string",
                    "example": "Krutaya Komanda"
                }
            }
        },
        "equipes.EquipeProjetos": {
            "type": "object",
            "properties": {
                "data_conclusao": {
                    "type": "string"
                },
                "data_criacao": {
                    "type": "string"
                },
                "id_projeto": {
                    "type": "integer"
                },
                "nome_equipe": {
                    "type": "string"
                },
                "nome_projeto": {
                    "type": "string"
                },
                "prazo_entrega": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "equipes.GetMembers": {
            "type": "object",
            "properties": {
                "id_equipe": {
                    "type": "integer"
                },
                "nome_equipe": {
                    "type": "string"
                },
                "pessoas": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Pessoa"
                    }
                },
                "projetos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Projeto"
                    }
                }
            }
        },
        "equipes.Membros": {
            "type": "object",
            "properties": {
                "funcao_pessoa": {
                    "type": "string"
                },
                "id_equipe": {
                    "type": "integer"
                },
                "id_pessoa": {
                    "type": "integer"
                },
                "nome_equipe": {
                    "type": "string"
                },
                "nome_pessoa": {
                    "type": "string"
                }
            }
        },
        "equipes.UpdateEquipeRequestBody": {
            "type": "object",
            "properties": {
                "id_equipe": {
                    "type": "integer",
                    "example": 1
                },
                "nome_equipe": {
                    "type": "string",
                    "example": "Krutaya Komanda"
                }
            }
        },
        "models.Equipe": {
            "type": "object",
            "properties": {
                "id_equipe": {
                    "type": "integer"
                },
                "nome_equipe": {
                    "type": "string"
                }
            }
        },
        "models.Pessoa": {
            "type": "object",
            "properties": {
                "equipe_id": {
                    "type": "integer"
                },
                "funcao_pessoa": {
                    "type": "string"
                },
                "id_pessoa": {
                    "type": "integer"
                },
                "nome_pessoa": {
                    "type": "string"
                }
            }
        },
        "models.Projeto": {
            "type": "object",
            "properties": {
                "descricao_projeto": {
                    "type": "string"
                },
                "equipe_id": {
                    "type": "integer"
                },
                "id_projeto": {
                    "type": "integer"
                },
                "nome_projeto": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "models.Task": {
            "type": "object",
            "properties": {
                "descricao_task": {
                    "type": "string"
                },
                "id_task": {
                    "type": "integer"
                },
                "pessoa_id": {
                    "type": "integer"
                },
                "prioridade": {
                    "type": "integer"
                },
                "projeto_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "pessoas.AddPessoaRequestBody": {
            "type": "object",
            "properties": {
                "equipe_id": {
                    "type": "integer",
                    "example": 1
                },
                "funcao_pessoa": {
                    "type": "string",
                    "example": "Back-End Developer"
                },
                "nome_pessoa": {
                    "type": "string",
                    "example": "Caio Sousa"
                }
            }
        },
        "pessoas.GetPessoa": {
            "type": "object",
            "properties": {
                "data_contratacao": {
                    "type": "string"
                },
                "equipe_id": {
                    "type": "integer"
                },
                "funcao_pessoa": {
                    "type": "string"
                },
                "id_pessoa": {
                    "type": "integer"
                },
                "nome_equipe": {
                    "type": "string"
                },
                "nome_pessoa": {
                    "type": "string"
                }
            }
        },
        "pessoas.UpdatePessoaRequestBody": {
            "type": "object",
            "properties": {
                "equipe_id": {
                    "type": "integer"
                },
                "funcao_pessoa": {
                    "type": "string"
                },
                "id_pessoa": {
                    "type": "integer"
                },
                "nome_pessoa": {
                    "type": "string"
                }
            }
        },
        "pessoas.result": {
            "type": "object",
            "properties": {
                "data_conclusao": {
                    "type": "string"
                },
                "data_criacao": {
                    "type": "string"
                },
                "descricao_task": {
                    "type": "string"
                },
                "funcao_pessoa": {
                    "type": "string"
                },
                "id_equipe": {
                    "type": "integer"
                },
                "id_task": {
                    "type": "integer"
                },
                "nome_equipe": {
                    "type": "string"
                },
                "nome_pessoa": {
                    "type": "string"
                },
                "nome_projeto": {
                    "type": "string"
                },
                "prazo_entrega": {
                    "type": "string"
                },
                "prioridade": {
                    "type": "integer"
                },
                "projeto_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "projetos.AddProjetoRequestBody": {
            "type": "object",
            "properties": {
                "descricao_projeto": {
                    "type": "string",
                    "example": "Projeto teste para exemplo do Swagger"
                },
                "equipe_id": {
                    "type": "integer",
                    "example": 1
                },
                "nome_projeto": {
                    "type": "string",
                    "example": "Projeto Teste"
                },
                "prazo_entrega": {
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "projetos.Projects": {
            "type": "object",
            "properties": {
                "data_conclusao": {
                    "type": "string",
                    "example": ""
                },
                "data_criacao": {
                    "type": "string",
                    "example": "2022-07-25"
                },
                "descricao_projeto": {
                    "type": "string",
                    "example": "Descricao"
                },
                "equipe_id": {
                    "type": "integer",
                    "example": 2
                },
                "id_projeto": {
                    "type": "integer",
                    "example": 58
                },
                "nome_equipe": {
                    "type": "string",
                    "example": "Cariri Inovação"
                },
                "nome_projeto": {
                    "type": "string",
                    "example": "Nome"
                },
                "prazo_entrega": {
                    "type": "string",
                    "example": "2022-07-25"
                },
                "status": {
                    "type": "string",
                    "example": "Concluido"
                }
            }
        },
        "projetos.TasksProjeto": {
            "type": "object",
            "properties": {
                "data_conclusao": {
                    "type": "string"
                },
                "data_criacao": {
                    "type": "string"
                },
                "descricao_task": {
                    "type": "string"
                },
                "id_projeto": {
                    "type": "integer"
                },
                "id_task": {
                    "type": "integer"
                },
                "nome_equipe": {
                    "type": "string"
                },
                "nome_pessoa": {
                    "type": "string"
                },
                "nome_projeto": {
                    "type": "string"
                },
                "pessoa_id": {
                    "type": "integer"
                },
                "prazo_entrega": {
                    "type": "string"
                },
                "prioridade": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "projetos.UpdateProjetoRequestBody": {
            "type": "object",
            "properties": {
                "descricao_projeto": {
                    "type": "string"
                },
                "equipe_id": {
                    "type": "integer"
                },
                "nome_projeto": {
                    "type": "string"
                }
            }
        },
        "projetos.UpdateStatusProject": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "tasks.AddTaskRequestBody": {
            "type": "object",
            "properties": {
                "descricao_task": {
                    "type": "string",
                    "example": "Descrição Teste"
                },
                "pessoa_id": {
                    "type": "integer",
                    "example": 4
                },
                "prazo_entrega": {
                    "type": "integer",
                    "example": 17
                },
                "prioridade": {
                    "type": "integer",
                    "example": 1
                },
                "projeto_id": {
                    "type": "integer",
                    "example": 24
                }
            }
        },
        "tasks.GetStatusList": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "tasks.Task": {
            "type": "object",
            "properties": {
                "data_conclusao": {
                    "type": "string"
                },
                "data_criacao": {
                    "type": "string"
                },
                "descricao_task": {
                    "type": "string"
                },
                "id_task": {
                    "type": "integer"
                },
                "nome_pessoa": {
                    "type": "string"
                },
                "nome_projeto": {
                    "type": "string"
                },
                "pessoa_id": {
                    "type": "integer"
                },
                "prazo_entrega": {
                    "type": "string"
                },
                "prioridade": {
                    "type": "integer"
                },
                "projeto_id": {
                    "type": "integer"
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "Em Andamento",
                        " Concluido"
                    ]
                }
            }
        },
        "tasks.UpdateStatusTaskRequestBody": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "tasks.UpdateTaskRequestBody": {
            "type": "object",
            "properties": {
                "descricao_task": {
                    "type": "string"
                },
                "pessoa_id": {
                    "type": "integer"
                },
                "prioridade": {
                    "type": "integer"
                },
                "projeto_id": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
