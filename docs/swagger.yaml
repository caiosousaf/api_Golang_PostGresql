definitions:
  projetos.ReqProjetos:
    properties:
      data_conclusao:
        example: ""
        type: string
      data_criacao:
        example: "2022-07-25"
        type: string
      descricao_projeto:
        example: Descricao
        type: string
      equipe_id:
        example: 2
        type: integer
      id_projeto:
        example: 58
        type: integer
      nome_equipe:
        example: Cariri Inovação
        type: string
      nome_projeto:
        example: Nome
        type: string
      prazo_entrega:
        example: "2022-07-25"
        type: string
      status:
        example: Concluido
        type: string
    type: object
  projetos.ReqTasksProjeto:
    properties:
      data_conclusao:
        type: string
      data_criacao:
        type: string
      descricao_task:
        type: string
      id_projeto:
        type: integer
      id_task:
        type: integer
      nome_equipe:
        type: string
      nome_pessoa:
        type: string
      nome_projeto:
        type: string
      pessoa_id:
        type: integer
      prazo_entrega:
        type: string
      prioridade:
        type: integer
      projeto_id:
        type: integer
      status:
        type: string
    type: object
info:
  contact:
    email: caiosousafernandesferreira@hotmail.com
    name: Caio Sousa
    url: http://www.swagger.io/support
  license:
    name: Mozilla Public License 2.0
    url: https://www.mozilla.org/en-US/MPL/2.0/
paths:
  /projetos:
    get:
      consumes:
      - application/json
      description: Get list all project
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/projetos.ReqProjetos'
            type: array
        "404":
          description: error
          schema:
            type: string
      security:
      - bearerAuth: []
      summary: Get All Projects
      tags:
      - Projects
  /projetos/{id}:
    get:
      consumes:
      - application/json
      description: GET a project with a specific ID
      parameters:
      - description: Projeto ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/projetos.ReqProjetos'
            type: array
        "400":
          description: Project does not exist
          schema:
            items:
              type: string
            type: array
        "404":
          description: not authorized
          schema:
            type: string
      security:
      - bearerAuth: []
      summary: Get Project with specific ID
      tags:
      - Projects
  /projetos/{id}/tasks:
    get:
      consumes:
      - application/json
      description: GET all tasks of a project with ID_Projeto specific
      parameters:
      - description: Projeto ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/projetos.ReqTasksProjeto'
            type: array
        "401":
          description: not authorized
          schema:
            items:
              type: string
            type: array
        "404":
          description: Project does not exist
          schema:
            items:
              type: string
            type: array
      security:
      - bearerAuth: []
      summary: Get Tasks of Project with Param ID
      tags:
      - Projects
securityDefinitions:
  bearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
