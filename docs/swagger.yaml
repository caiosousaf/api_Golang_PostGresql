definitions:
  equipes.GetMembers:
    properties:
      id_equipe:
        type: integer
      nome_equipe:
        type: string
      pessoas:
        items:
          $ref: '#/definitions/models.Pessoa'
        type: array
      projetos:
        items:
          $ref: '#/definitions/models.Projeto'
        type: array
    type: object
  models.Pessoa:
    properties:
      equipe_id:
        type: integer
      funcao_pessoa:
        type: string
      id_pessoa:
        type: integer
      nome_pessoa:
        type: string
    type: object
  models.Projeto:
    properties:
      descricao_projeto:
        type: string
      equipe_id:
        type: integer
      id_projeto:
        type: integer
      nome_projeto:
        type: string
      status:
        type: string
    type: object
  pessoas.GetPessoa:
    properties:
      data_contratacao:
        type: string
      equipe_Id:
        type: integer
      funcao_pessoa:
        type: string
      id_pessoa:
        type: integer
      nome_equipe:
        type: string
      nome_pessoa:
        type: string
    type: object
  projetos.AddProjetoRequestBody:
    properties:
      descricao_projeto:
        type: string
      equipe_id:
        type: integer
      nome_projeto:
        type: string
      prazo_entrega:
        type: integer
      status:
        type: string
    type: object
  projetos.Projects:
    properties:
      data_conclusao:
        type: string
      data_criacao:
        type: string
      descricao_projeto:
        type: string
      equipe_id:
        type: integer
      id_projeto:
        type: integer
      nome_equipe:
        type: string
      nome_projeto:
        type: string
      prazo_entrega:
        type: string
      status:
        type: string
    type: object
  projetos.TasksProjeto:
    properties:
      data_conclusao:
        type: string
      data_criacao:
        type: string
      descricao_task:
        type: string
      id_projeto:
        type: integer
      id_task:
        type: string
      nome_equipe:
        type: string
      nome_pessoa:
        type: string
      nome_projeto:
        type: string
      pessoa_id:
        type: integer
      prazo_entrega:
        type: string
      prioridade:
        type: integer
      status:
        type: string
    type: object
  projetos.UpdateProjetoRequestBody:
    properties:
      descricao_projeto:
        type: string
      equipe_id:
        type: integer
      nome_projeto:
        type: string
    type: object
  projetos.UpdateStatusProject:
    properties:
      status:
        type: string
    type: object
  tasks.Task:
    properties:
      data_conclusao:
        type: string
      data_criacao:
        type: string
      descricao_task:
        type: string
      id_task:
        type: integer
      nome_pessoa:
        type: string
      nome_projeto:
        type: string
      pessoa_id:
        type: integer
      prazo_entrega:
        type: string
      prioridade:
        type: integer
      projeto_id:
        type: integer
      status:
        type: string
    type: object
info:
  contact:
    email: caiosousafernandesferreira@hotmail.com
    name: Caio Sousa
    url: http://www.swagger.io/support
  license:
    name: BrisaNet 1.0
    url: https://www.mozilla.org/en-US/MPL/2.0/
paths:
  /equipes:
    get:
      consumes:
      - application/json
      description: Returns all registered teams, all their members and all projects
        they are assigned to
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/equipes.GetMembers'
            type: array
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
      summary: Get All Teams
      tags:
      - Teams
  /pessoas:
    get:
      consumes:
      - application/json
      description: Returns all registered people and the name of the team they are
        assigned to
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/pessoas.GetPessoa'
            type: array
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
      summary: Get All People
      tags:
      - People
  /projetos:
    get:
      consumes:
      - application/json
      description: Get list all project
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/projetos.Projects'
            type: array
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
      summary: Get All Projects
      tags:
      - Projects
    post:
      consumes:
      - application/json
      description: POST a new project. For the request to be met, the "nome_projeto",
        "equipe_id", "descricao_projeto" are required. The status already goes with
        a predefined value "Em Andamento". the "prazo_entrega" is the number of days
        that the delivery time will be
      parameters:
      - description: NewProject
        in: body
        name: NewProject
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/projetos.AddProjetoRequestBody'
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
      summary: POST a new Project
      tags:
      - Projects
  /projetos/{id}:
    delete:
      consumes:
      - application/json
      description: DELETE a specific project. For the request to be met, the "id_projeto"
        are required
      parameters:
      - description: Projeto ID
        in: path
        name: ID
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Projeto'
            type: array
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
      summary: Delete a specific Project
      tags:
      - Projects
    get:
      consumes:
      - application/json
      description: GET a project with a specific ID
      parameters:
      - description: Projeto ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/projetos.Projects'
            type: array
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
      summary: Get Project with specific ID
      tags:
      - Projects
    put:
      consumes:
      - application/json
      description: PUT a specific project. For the request to be met, the "nome_projeto"
        and "equipe_id" and "descricao_projeto" are required
      parameters:
      - description: Projeto ID
        in: path
        name: id
        required: true
        type: integer
      - description: Project
        in: body
        name: Project
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/projetos.UpdateProjetoRequestBody'
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
      summary: PUT Project with ID
      tags:
      - Projects
  /projetos/{id}/status:
    put:
      consumes:
      - application/json
      description: PUT Status of a specific project. For the request to be met, the
        "status" are required
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: Status-Project
        in: body
        name: Status-Project
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/projetos.UpdateStatusProject'
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
      summary: PUT Status of a Project
      tags:
      - Projects
  /projetos/{id}/tasks:
    get:
      consumes:
      - application/json
      description: GET all tasks of a project with ID_Projeto specific
      parameters:
      - description: Projeto ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/projetos.TasksProjeto'
            type: array
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
      summary: Get Tasks of Project with Param ID
      tags:
      - Projects
  /projetos/status/{status}:
    get:
      consumes:
      - application/json
      description: GET all registered projects that have the status passed as a parameter
      parameters:
      - description: Status
        in: path
        name: status
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Projeto'
            type: array
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
      summary: Get Status of Projects with a specific status with Param Status
      tags:
      - Projects
  /tasks:
    get:
      consumes:
      - application/json
      description: Get list all task
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/tasks.Task'
            type: array
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
      summary: Get All Tasks
      tags:
      - Task
swagger: "2.0"
