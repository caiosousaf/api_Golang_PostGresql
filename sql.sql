/*
alter table tasks 
ADD COLUMN status varchar(20)

alter table projetos 
ADD COLUMN descricao_projeto varchar(500)

select * from projetos

select * from tasks

insert into projetos (status) values ('Em Andamento')

update projetos set status = 'Em Andamento'

update tasks set status = 'Em Andamento'

update tasks set status = 'Concluido' where id_task = 1



select tk.id_task, tk.descricao_task, tk.pessoa_id, pe.nome_pessoa, tk.projeto_id, pr.nome_projeto, tk.status
 from tasks as tk inner join pessoas as pe on tk.pessoa_id = pe.id_pessoa inner join projetos as pr on tk.projeto_id = pr.id_projeto
 where tk.id_task = 1

select * from tasks where status = 'Em Andamento'

    select pr.id_projeto, pr.nome_projeto from projetos as pr
	inner join pessoas as pe
	on pe.equipe_id = pr.equipe_id 
	where pe.id_pessoa = 4






	11/07/2022

select pr.id_projeto, pr.nome_projeto, pr.equipe_id, eq.nome_equipe, pr.status, pr.descricao_projeto, 
pr.data_criacao, pr.data_conclusao
from projetos as pr inner join equipes as eq on pr.equipe_id = eq.id_equipe

select * from tasks

select pr.id_projeto, pr.nome_projeto, eq.nome_equipe,tk.id_task, tk.descricao_task, tk.status, 
pe.nome_pessoa from 
projetos as pr inner join tasks as tk on pr.id_projeto = tk.projeto_id inner join
equipes as eq on pr.equipe_id = eq.id_equipe inner join
pessoas as pe on pe.id_pessoa = tk.pessoa_id where id_projeto = 3 


20/07/2022

select current_date + interval '26 DAYS' AS Data;


21/07/2022

-- This script was generated by a beta version of the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.equipes
(
    id_equipe bigint NOT NULL DEFAULT nextval('equipes_id_equipe_seq'::regclass),
    nome_equipe text COLLATE pg_catalog."default",
    data_criacao date DEFAULT CURRENT_DATE,
    CONSTRAINT equipes_pkey PRIMARY KEY (id_equipe)
);

CREATE TABLE IF NOT EXISTS public.pessoas
(
    id_pessoa bigint NOT NULL DEFAULT nextval('pessoas_id_pessoa_seq'::regclass),
    nome_pessoa character varying(30) COLLATE pg_catalog."default" NOT NULL,
    funcao_pessoa character varying(15) COLLATE pg_catalog."default" NOT NULL,
    equipe_id bigint,
    data_contratacao date DEFAULT CURRENT_DATE,
    CONSTRAINT pessoas_pkey PRIMARY KEY (id_pessoa)
);

CREATE TABLE IF NOT EXISTS public.projetos
(
    id_projeto bigint NOT NULL DEFAULT nextval('projetos_id_projeto_seq'::regclass),
    nome_projeto character varying(30) COLLATE pg_catalog."default" NOT NULL,
    equipe_id bigint,
    status character varying(20) COLLATE pg_catalog."default",
    descricao_projeto character varying(500) COLLATE pg_catalog."default",
    data_criacao date DEFAULT CURRENT_DATE,
    data_conclusao date,
    prazo_entrega date,
    CONSTRAINT projetos_pkey PRIMARY KEY (id_projeto)
);

CREATE TABLE IF NOT EXISTS public.tasks
(
    id_task bigint NOT NULL DEFAULT nextval('tasks_id_task_seq'::regclass),
    descricao_task character varying(100) COLLATE pg_catalog."default" NOT NULL,
    pessoa_id bigint,
    projeto_id bigint,
    status character varying(20) COLLATE pg_catalog."default",
    data_criacao date DEFAULT CURRENT_DATE,
    data_conclusao date,
    prazo_entrega date,
    prioridade bigint,
    CONSTRAINT tasks_pkey PRIMARY KEY (id_task)
);

CREATE TABLE IF NOT EXISTS public.users
(
    id_usuario bigint NOT NULL DEFAULT nextval('users_id_usuario_seq'::regclass),
    nome text COLLATE pg_catalog."default",
    email text COLLATE pg_catalog."default",
    password text COLLATE pg_catalog."default",
    created_at timestamp with time zone,
    update_at timestamp with time zone,
    deleted_at timestamp with time zone,
    CONSTRAINT users_pkey PRIMARY KEY (id_usuario)
);

ALTER TABLE IF EXISTS public.pessoas
    ADD CONSTRAINT fk_pessoas_equipe FOREIGN KEY (equipe_id)
    REFERENCES public.equipes (id_equipe) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.projetos
    ADD CONSTRAINT fk_projetos_equipe FOREIGN KEY (equipe_id)
    REFERENCES public.equipes (id_equipe) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.tasks
    ADD CONSTRAINT fk_tasks_pessoa FOREIGN KEY (pessoa_id)
    REFERENCES public.pessoas (id_pessoa) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.tasks
    ADD CONSTRAINT fk_tasks_projeto FOREIGN KEY (projeto_id)
    REFERENCES public.projetos (id_projeto) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE SET NULL;

END;























*/ 